import React, { useContext } from "react";
import { Routes, Route, Navigate, Link as RouterLink } from "react-router-dom";
import { AuthContext } from "./contexts/AuthContext";
import { SocialMediaProvider } from "./contexts/SocialMediaContext";
import {
  AppBar,
  Toolbar,
  Typography,
  Button,
  Container,
  Box,
  IconButton,
  Avatar,
  Menu,
  MenuItem,
  Drawer,
  List,
  ListItem,
  ListItemIcon,
  ListItemText,
  useMediaQuery,
} from "@mui/material";
import { ThemeProvider } from '@mui/material/styles';
import MenuIcon from '@mui/icons-material/Menu';
import DashboardIcon from '@mui/icons-material/Dashboard';
import AssessmentIcon from '@mui/icons-material/Assessment';
import PeopleIcon from '@mui/icons-material/People';
import BusinessIcon from '@mui/icons-material/Business';
import PersonIcon from '@mui/icons-material/Person';
import theme from './theme/theme';

// Import your existing components
import LoginPage from "./pages/LoginPage";
import AdminDashboard from "./pages/admin/AdminDashboard";
import ReportsAnalytics from "./pages/admin/ReportsAnalytics";
import AdminOwners from "./pages/admin/AdminOwners";
import AdminBrokers from "./pages/admin/AdminBrokers";
import AdminCustomers from "./pages/admin/AdminCustomers";
import OwnerDashboard from "./pages/OwnerDashboard";
import OwnerPropertyForm from "./components/owner/OwnerPropertyForm";
import OwnerBookings from "./pages/owner/OwnerBookings";
import OwnerPayments from "./pages/owner/OwnerPayments";
import CustomerDashboard from "./pages/CustomerDashboard";
import Favorites from "./pages/customer/Favorites";
import MyBookings from "./pages/customer/MyBookings";
import UnauthorizedPage from "./pages/UnauthorizedPage";

function App() {
  const { user, logout } = useContext(AuthContext)!;
  const [mobileOpen, setMobileOpen] = React.useState(false);
  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);
  const isMobile = useMediaQuery(theme.breakpoints.down('md'));

  const handleDrawerToggle = () => {
    setMobileOpen(!mobileOpen);
  };

  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {
    setAnchorEl(event.currentTarget);
  };

  const handleClose = () => {
    setAnchorEl(null);
  };

  const handleLogout = () => {
    handleClose();
    logout();
  };

  const menuItems = React.useMemo(() => {
    const items = [];
    
    if (user?.role === 'admin') {
      items.push(
        { text: 'Dashboard', icon: <DashboardIcon />, path: '/admin' },
        { text: 'Reports', icon: <AssessmentIcon />, path: '/admin/reports' },
        { text: 'Owners', icon: <BusinessIcon />, path: '/admin/owners' },
        { text: 'Brokers', icon: <PeopleIcon />, path: '/admin/brokers' },
        { text: 'Customers', icon: <PersonIcon />, path: '/admin/customers' }
      );
    } else if (user?.role === 'owner') {
      items.push(
        { text: 'Dashboard', icon: <DashboardIcon />, path: '/owner' },
        { text: 'Add Property', icon: <BusinessIcon />, path: '/owner/property-form' },
        { text: 'Bookings', icon: <AssessmentIcon />, path: '/owner/bookings' }
      );
    } else if (user?.role === 'customer') {
      items.push(
        { text: 'Dashboard', icon: <DashboardIcon />, path: '/customer' }
      );
    }

    return items;
  }, [user?.role]);

  return (
    <ThemeProvider theme={theme}>
      <SocialMediaProvider>
        {user && (
          <AppBar position="fixed" elevation={1}>
            <Toolbar>
              {isMobile && (
                <IconButton
                  color="inherit"
                  aria-label="open drawer"
                  edge="start"
                  onClick={handleDrawerToggle}
                  sx={{ mr: 2 }}
                >
                  <MenuIcon />
                </IconButton>
              )}

              <Typography variant="h6" component={RouterLink} to="/" sx={{ 
                flexGrow: 0,
                mr: 4,
                textDecoration: 'none',
                color: 'inherit',
                fontWeight: 700,
              }}>
                Beach Resort
              </Typography>

              {!isMobile && (
                <Box sx={{ flexGrow: 1, display: 'flex', gap: 2 }}>
                  {menuItems.map((item) => (
                    <Button
                      key={item.text}
                      color="inherit"
                      component={RouterLink}
                      to={item.path}
                      startIcon={item.icon}
                    >
                      {item.text}
                    </Button>
                  ))}
                </Box>
              )}

              <Box sx={{ flexGrow: 0, display: 'flex', alignItems: 'center', gap: 2 }}>
                <IconButton
                  onClick={handleMenu}
                  size="small"
                  sx={{ ml: 2 }}
                  aria-controls="menu-appbar"
                  aria-haspopup="true"
                >
                  <Avatar sx={{ width: 32, height: 32, bgcolor: 'primary.main' }}>
                    {user.name[0].toUpperCase()}
                  </Avatar>
                </IconButton>
                <Menu
                  id="menu-appbar"
                  anchorEl={anchorEl}
                  anchorOrigin={{
                    vertical: 'bottom',
                    horizontal: 'right',
                  }}
                  keepMounted
                  transformOrigin={{
                    vertical: 'top',
                    horizontal: 'right',
                  }}
                  open={Boolean(anchorEl)}
                  onClose={handleClose}
                >
                  <MenuItem onClick={handleClose}>Profile</MenuItem>
                  <MenuItem onClick={handleClose}>Settings</MenuItem>
                  <MenuItem onClick={handleLogout}>Logout</MenuItem>
                </Menu>
              </Box>
            </Toolbar>
          </AppBar>
        )}

        <Drawer
          variant="temporary"
          anchor="left"
          open={mobileOpen}
          onClose={handleDrawerToggle}
          ModalProps={{
            keepMounted: true, // Better open performance on mobile.
          }}
          sx={{
            display: { xs: 'block', md: 'none' },
            '& .MuiDrawer-paper': { boxSizing: 'border-box', width: 240 },
          }}
        >
          <Toolbar />
          <Box sx={{ overflow: 'auto' }}>
            <List>
              {menuItems.map((item) => (
                <ListItem
                  button
                  key={item.text}
                  component={RouterLink}
                  to={item.path}
                  onClick={handleDrawerToggle}
                >
                  <ListItemIcon>{item.icon}</ListItemIcon>
                  <ListItemText primary={item.text} />
                </ListItem>
              ))}
            </List>
          </Box>
        </Drawer>

        <Box
          component="main"
          sx={{
            flexGrow: 1,
            p: 3,
            width: '100%',
            minHeight: '100vh',
            bgcolor: 'background.default',
            mt: 8,
          }}
        >
          <Container maxWidth="lg">
            <Routes>
              <Route path="/login" element={<LoginPage />} />
              <Route path="/admin" element={<AdminDashboard />} />
              <Route path="/admin/reports" element={<ReportsAnalytics />} />
              <Route path="/admin/owners" element={<AdminOwners />} />
              <Route path="/admin/brokers" element={<AdminBrokers />} />
              <Route path="/admin/customers" element={<AdminCustomers />} />
              <Route path="/owner" element={<OwnerDashboard />} />
              <Route path="/owner/property-form" element={<OwnerPropertyForm />} />
              <Route path="/owner/bookings" element={<OwnerBookings />} />
              <Route path="/owner/payments" element={user?.role === "owner" ? <OwnerPayments /> : <UnauthorizedPage />} />
              <Route path="/customer" element={<CustomerDashboard />} />
              <Route
                path="/customer/favorites"
                element={user?.role === "customer" ? <Favorites /> : <UnauthorizedPage />}
              />
              <Route
                path="/customer/my-bookings"
                element={user?.role === "customer" ? <MyBookings /> : <UnauthorizedPage />}
              />
              <Route path="/" element={user ? <Navigate to={`/${user.role}`} /> : <Navigate to="/login" />} />
            </Routes>
          </Container>
        </Box>
      </SocialMediaProvider>
    </ThemeProvider>
  );
}

export default App;
